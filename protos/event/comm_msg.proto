syntax = "proto3";

package kritor.event;

option csharp_namespace = "Kritor.Event";
option java_multiple_files = true;
option java_package = "io.kritor.event";
option go_package = "grpc/kritor/event";

enum Scene {
  GROUP = 0; // 群聊
  FRIEND = 1; // 私聊
  GUILD = 2; // 频道
  STRANGER_FROM_GROUP = 10; // 群临时会话

  // 以下类型为可选实现
  NEARBY = 5; // 附近的人
  STRANGER = 9; // 陌生人
}

message Contact {
  Scene scene = 1;
  string peer = 2; // 群聊则为群号 私聊则为QQ号
  optional string sub_peer = 3; // 群临时聊天则为群号 频道消息则为子频道号 其它情况可不提供
}

message Sender {
  string nick = 1;
  string uid = 2;
  optional uint64 uin = 3;
}

enum ElementType {
  TEXT = 0;
  AT = 1;
  FACE = 2;
  BUBBLE_FACE = 3;
  REPLY = 4;
  IMAGE = 5;
  VOICE = 6;
  VIDEO = 7;
  BASKETBALL = 8;
  DICE = 9;
  RPS = 10;
  POKE = 11;
  MUSIC = 12;
  WEATHER = 13;
  LOCATION = 14;
  SHARE = 15;
  GIFT = 16;
  MARKET_FACE = 17;
  FORWARD = 18;
  CONTACT = 19;
  JSON = 20;
  XML = 21;
  FILE = 22;
  MARKDOWN = 23;
  BUTTON = 24;

  NODE = 99;
}

message Element {
  ElementType type = 1;
  oneof data {
    TextElement text = 2;
    AtElement at = 3;
    FaceElement face = 4;
    BubbleFaceElement bubble_face = 5;
    ReplyElement reply = 6;
    ImageElement image = 7;
    VoiceElement voice = 8;
    VideoElement video = 9;
    BasketballElement basketball = 10;
    DiceElement dice = 11;
    RpsElement rps = 12;
    PokeElement poke = 13;
    MusicElement music = 14;
    WeatherElement weather = 15;
    LocationElement location = 16;
    ShareElement share = 17;
    GiftElement gift = 18;
    MarketFaceElement market_face = 19;
    ForwardElement forward = 20;
    ContactElement contact = 21;
    JsonElement json = 22;
    XmlElement xml = 23;
    FileElement file = 24;
    MarkdownElement markdown = 25;
    ButtonElement button = 26;
    NodeElement node = 99;
  }
}

message TextElement {
  string text = 1;
}

message AtElement {
  string uid = 1;
  optional uint64 uin = 2;
}

message FaceElement {
  uint32 id = 1;
  optional bool is_big = 2;
  optional uint32 result = 3;
}

message BubbleFaceElement {
  uint32 id = 1;
  uint32 count = 2;
}

message ReplyElement {
  uint64 message_id = 1;
}

enum ImageType {
  COMMON  = 0;
  ORIGIN  = 1;
  FLASH   = 2;
}

message ImageElement {
  string file = 1;
  optional string url = 2;
  optional ImageType type = 3;
  optional uint32 sub_type = 4;
}

message VoiceElement {
  optional string file = 1;
  string url = 2;
  optional bool magic = 3;
}

message VideoElement {
  string file = 1;
  string url = 2;
}

message BasketballElement {
  uint32 id = 1;
}

message DiceElement {
  uint32 id = 1;
}

message RpsElement {
  uint32 id = 1;
}

message PokeElement {
  uint32 id = 1;
  uint32 type = 2;
  uint32 strength = 3;
}

enum MusicPlatform {
  QQ = 0;
  NetEase = 1;
  Custom = 10;
}

message CustomMusicData {
  string url  = 1;
  string audio  = 2;
  string title  =3;
  string author  = 4;
  string pic  = 5;
}

message MusicElement {
  MusicPlatform platform = 1;
  oneof data {
    string id = 2;
    CustomMusicData custom = 3;
  }
}

message WeatherElement {
  string city = 1;
  string code = 2;
}

message LocationElement {
  float lat = 1;
  float lon = 2;
  string title = 3;
  string address = 4;
}

message ShareElement {
  string url = 1;
  string title = 2;
  string content = 3;
  string image = 4;
}

message GiftElement {
  uint64 qq = 1;
  uint32 id = 2;
}

message MarketFaceElement {
  string id = 1;
}

message ForwardElement {
  string id = 1;
  string uniseq = 2;
  string summary = 3;
  string description = 4;
}

message ContactElement {
  Scene scene = 1;
  string peer = 2;
}

message JsonElement {
  string json = 1;
}

message XmlElement {
  string xml = 1;
}

message FileElement {
  string name = 1;
  uint64 size = 2;
  uint64 expire_time = 3;
  string id = 4;
  string url = 5;
  int32 biz = 6;
  string sub_id = 7;
}

message MarkdownElement {
  string markdown = 1;
}

message ButtonActionPermission {
  int32 type = 1;
  repeated string role_ids = 2;
  repeated string user_ids = 3;
}

message ButtonAction {
  int32 type = 1;
  ButtonActionPermission permission = 2;
  string unsupported_tips = 3;
  string data = 4;
  bool reply = 5;
  bool enter = 6;
}

message ButtonRender {
  string label = 1;
  string visited_label = 2;
  int32 style = 3;
}

message Button {
  string id = 1;
  ButtonRender render_data = 2;
  ButtonAction action = 3;
}

message Row {
  repeated Button buttons = 1;
}

message ButtonElement {
  repeated Row rows = 1;
}

message NodeElement {
  Contact scene = 1;
  uint64 message_id = 2;
}