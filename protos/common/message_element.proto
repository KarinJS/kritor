/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";

package kritor.common;

option csharp_namespace = "Kritor.Common";
option java_multiple_files = true;
option java_package = "io.kritor.common";
option go_package = "grpc/kritor/common";

import "common/contact.proto";

message Element {
  enum ElementType {
    UNSPECIFIED = 0;
    TEXT = 1;
    AT = 2;
    FACE = 3;
    BUBBLE_FACE = 4;
    REPLY = 5;
    IMAGE = 6;
    VOICE = 7;
    VIDEO = 8;
    BASKETBALL = 9;
    DICE = 10;
    RPS = 11;
    POKE = 12;
    MUSIC = 13;
    WEATHER = 14;
    LOCATION = 15;
    SHARE = 16;
    GIFT = 17;
    MARKET_FACE = 18;
    FORWARD = 19;
    CONTACT = 20;
    JSON = 21;
    XML = 22;
    FILE = 23;
    MARKDOWN = 24;
    KEYBOARD = 25;
  }
  
  // be friendly to some languages that don't support oneof
  ElementType type = 1;
  oneof data {
    TextElement text = 2;
    AtElement at = 3;
    FaceElement face = 4;
    BubbleFaceElement bubble_face = 5;
    ReplyElement reply = 6;
    ImageElement image = 7;
    VoiceElement voice = 8;
    VideoElement video = 9;
    BasketballElement basketball = 10;
    DiceElement dice = 11;
    RpsElement rps = 12;
    PokeElement poke = 13;
    MusicElement music = 14;
    WeatherElement weather = 15;
    LocationElement location = 16;
    ShareElement share = 17;
    GiftElement gift = 18;
    MarketFaceElement market_face = 19;
    ForwardElement forward = 20;
    ContactElement contact = 21;
    JsonElement json = 22;
    XmlElement xml = 23;
    FileElement file = 24;
    MarkdownElement markdown = 25;
    KeyboardElement keyboard = 26;
  }
}

message TextElement {
  string text = 1; // 文本
}

message AtElement {
  optional string uid = 1; // 全体成员这里请写all
  optional uint64 uin = 2;
}

message FaceElement {
  uint32 id = 1;            // 表情id
  optional bool is_big = 2; // 是否大表情，默认不是
  optional uint32 result = 3;
}

message BubbleFaceElement {
  uint32 id = 1;    // 表情id
  uint32 count = 2; // 表情数量
}

message ReplyElement {
  string message_id = 1; // 回复的消息id
}

message ImageElement {
  enum ImageType {
    UNSPECIFIED = 0;
    COMMON = 1;
    ORIGIN = 2;
    FLASH = 3;
  }
  
  oneof data {
    bytes file = 1;       // 文件内容
    string file_name = 2; // 文件文件名
    string file_path = 3; // 文件绝对路径
    string file_url = 4;  // 文件下载地址
  }
  optional string file_md5 = 5;
  optional uint32 sub_type = 6;
  optional ImageType file_type = 10;
}

message VoiceElement {
  oneof data {
    bytes file = 1;       // 文件内容
    string file_name = 2; // 文件文件名
    string file_path = 3; // 文件绝对路径
    string file_url = 4;  // 文件下载地址
  }
  optional string file_md5 = 5;
  optional bool magic = 6; // 是否魔法语音
}

message VideoElement {
  oneof data {
    bytes file = 1;       // 文件内容
    string file_name = 2; // 文件名
    string file_path = 3; // 文件绝对路径
    string file_url = 4;  // 文件下载地址
  }
  optional string file_md5 = 5;
}

message BasketballElement {
  uint32 id = 1;
} // NT改版，这类消息的值由服务器随机生成

message DiceElement { uint32 id = 1; }

message RpsElement { uint32 id = 1; }

message PokeElement {
  uint32 id = 1;       // 戳一戳id
  uint32 poke_type = 2;     // 戳一戳类型
  uint32 strength = 3; // 戳一戳强度
}

message CustomMusicData {
  string url = 1;
  string audio = 2;
  string title = 3;
  string author = 4;
  string pic = 5;
}

message MusicElement {
  enum MusicPlatform {
    UNSPECIFIED = 0;
    QQ = 1;
    NETEASE = 2;
    CUSTOM = 11;
  }

  MusicPlatform platform = 1;
  oneof data {
    string id = 2;
    CustomMusicData custom = 3;
  }
}

message WeatherElement {
  string city = 1;
  string code = 2;
}

message LocationElement {
  float lat = 1;
  float lon = 2;
  string title = 3;
  string address = 4;
}

message ShareElement {
  string url = 1;
  string title = 2;
  string content = 3;
  string image = 4;
}

message GiftElement {
  uint64 qq = 1;
  uint32 id = 2;
} // 不支持发送

message MarketFaceElement { string id = 1; }

message ForwardElement {
  string res_id = 1;
  string uniseq = 2;
  string summary = 3;
  string description = 4;
}

message ContactElement {
  Scene scene = 1;
  string peer = 2;
}

message JsonElement { string json = 1; }

message XmlElement { string xml = 1; }

message FileElement {
  optional string name = 1;
  optional uint64 size = 2;
  optional uint64 expire_time = 3;
  optional string id = 4;
  optional string url = 5;
  optional int32 biz = 6;
  optional string sub_id = 7;
} // 不支持通过这里发送

message MarkdownElement { string markdown = 1; }

message ButtonActionPermission {
  int32 type = 1;
  repeated string role_ids = 2;
  repeated string user_ids = 3;
}

message ButtonAction {
  int32 type = 1;
  ButtonActionPermission permission = 2;
  string unsupported_tips = 3;
  string data = 4;
  bool reply = 5;
  bool enter = 6;
}

message ButtonRender {
  string label = 1;
  string visited_label = 2;
  int32 style = 3;
}

message Button {
  string id = 1;
  ButtonRender render_data = 2;
  ButtonAction action = 3;
}

message KeyboardRow { repeated Button buttons = 1; }

message KeyboardElement {
  repeated KeyboardRow rows = 1;
  uint64 bot_appid = 2;
}