syntax = "proto3";

package kritor.core;

option csharp_namespace = "Kritor.Core";
option java_multiple_files = true;
option java_package = "io.kritor.core";
option go_package = "grpc/kritor/core";

service KritorService {
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse) {} // 获取Kritor版本
  rpc ClearCache(ClearCacheRequest) returns (ClearCacheResponse) {}
  rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse) {} // 让Kritor下载文件到Kritor本地

  rpc GetCurrentAccount(GetCurrentAccountRequest) returns (GetCurrentAccountResponse) {} // 获取当前账户信息

  rpc SwitchAccount(SwitchAccountRequest) returns (SwitchAccountResponse) {} // 切换账户

  rpc GetDeviceBattery(GetDeviceBatteryRequest) returns (GetDeviceBatteryResponse) {} // 获取设备电量
}

message GetVersionRequest {}

message GetVersionResponse {
  string version = 1; // Kritor版本
  string app_name = 2;
}

message ClearCacheRequest {}

message ClearCacheResponse {}

message DownloadFileRequest {
  optional string url = 1; // 下载文件的URL 二选一
  optional string base64 = 2; // 下载文件的base64 二选一
  optional string root_path = 3; // 下载文件的根目录 需要保证Kritor有该目录访问权限 可选
  optional string file_name = 4; // 保存的文件名称 默认为文件MD5 可选
  optional uint32 thread_cnt = 5; // 下载文件的线程数 默认为3 可选
  optional string headers = 6; // 下载文件的请求头 可选
}

message DownloadFileResponse {
  string file_absolute_path = 1; // 下载文件的绝对路径
  string file_md5 = 2; // 下载文件的MD5
}

message GetCurrentAccountRequest {}

message GetCurrentAccountResponse {
  string account_uid = 1; // 当前账户
  uint64 account_uin = 2;
  string account_name = 3; // 当前账户名称
}

message SwitchAccountRequest {
  oneof account {
    string account_uid = 1; // 切换账户uid
    uint64 account_uin = 2; // 切换账户uin
  }
  string super_ticket = 3; // 凭证
}

message SwitchAccountResponse {}

message GetDeviceBatteryRequest {}

message GetDeviceBatteryResponse {
  uint32 battery = 1; // 设备电量
  uint32 scale = 2;
  uint32 status = 3;
}